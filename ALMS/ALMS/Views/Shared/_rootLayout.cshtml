<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8" />
    <title>@ViewBag.Title</title>

    @Html.DevExpress().GetStyleSheets(
                new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
                new StyleSheet { ExtensionSuite = ExtensionSuite.Editors },
                new StyleSheet { ExtensionSuite = ExtensionSuite.GridView }
            )
    @Html.DevExpress().GetScripts(
                new Script { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
                new Script { ExtensionSuite = ExtensionSuite.Editors },
                new Script { ExtensionSuite = ExtensionSuite.GridView }
            )
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link href="~/Content/alertifyjs/alertify.min.css" rel="stylesheet" />
    <link href="~/Content/alertifyjs/themes/default.min.css" rel="stylesheet" />
    <script src="~/Scripts/alertify.min.js"></script>

    <script>
        var otherHeight = 123;
        function UpdateGridHeight(s, e) {
            //console.log("UpdateGridHeight: "+otherHeight)
            if (window.GridView && e.pane.name == 'ContentCenter') {
                console.log("UpdateGridHeight: " + otherHeight)
                GridView.SetHeight(e.pane.GetClientHeight() - otherHeight);
            }
        }
    </script>
</head>
<body>
    @Html.DevExpress().Splitter(settings =>
{
    settings.Name = "MainSplitter";
    settings.AllowResize = false;
    settings.Orientation = System.Web.UI.WebControls.Orientation.Vertical;
    settings.FullscreenMode = true;
    settings.SeparatorVisible = false;
    settings.Styles.Pane.Border.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(0);
    settings.Styles.Pane.Paddings.Padding = System.Web.UI.WebControls.Unit.Pixel(0);

    settings.Panes.Add(pane =>
    {
        pane.Name = "Header";
        pane.AutoHeight = true;
        pane.PaneStyle.BorderBottom.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(1);
        pane.PaneStyle.BorderBottom.BorderColor = System.Drawing.ColorTranslator.FromHtml("#c0c0c0");
        pane.PaneStyle.CssClass = "headerPane";
        pane.SetContent(() =>
        {
            Html.RenderPartial("HeaderPartialView");
        });
    });

    settings.Panes.Add(pane =>
    {
        pane.Name = "Content";
        pane.PaneStyle.CssClass = "mainContentPane";
        pane.MinSize = System.Web.UI.WebControls.Unit.Pixel(375);
        pane.PaneStyle.BackColor = System.Drawing.Color.White;
        pane.PaneStyle.BorderBottom.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(1);
        pane.PaneStyle.BorderBottom.BorderColor = System.Drawing.ColorTranslator.FromHtml("#c0c0c0");
        pane.SetContent(RenderBody().ToHtmlString());
    });

    settings.Panes.Add(pane =>
    {
        pane.Name = "Footer";
        pane.Size = System.Web.UI.WebControls.Unit.Pixel(30);
        pane.PaneStyle.CssClass = "footerPane";
        pane.SetContent(() =>
        {
            Html.RenderPartial("FooterPartialView");
        });
    });
}).GetHtml()
    <script>
        $(function () {
            alertify.set('notifier', 'position', 'bottom-center');
            alertify.confirm().set('labels', { ok: '確認', cancel: '取消' });
        });

        function ShowError(msg) {
            if (msg != null && msg.length > 1) {
                alertify.error(msg);
            }
        }

        function ShowSuccess() {
            alertify.success("Success");
        }
    </script>
</body>
</html>
