@model string

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
<script>
    var keyOnPage = '@Model';
    function ToolBarClick(s, e) {
        if (e.item.name == "Save") {
            Save();
        }
        else if (e.item.name == "Cancel") {
            GetEditForm(keyOnPage);
        }
    }

    function Save() {
        if (labelSumDEB.GetValue() != labelSumCRE.GetValue()) {
            ShowError("借貸金額不一致");
        } else {
            $.validator.unobtrusive.parse("#MasterForm");
            if ($("#MasterForm").valid()) {
                DetailGrid.callbackCustomArgs["master"] = MVCxClientUtils.GetSerializedEditorValuesInContainer("MasterForm", true);
                var container = $("body");
                var token = $('input[name="__RequestVerificationToken"]', container).val();
                DetailGrid.callbackCustomArgs["__RequestVerificationToken"] = token;

                if (DetailGrid.batchEditApi.HasChanges()) {
                    DetailGrid.UpdateEdit();
                }
                else {
                    DetailGrid.PerformCallback();
                }
            }
        }
    }
</script>

<div style="margin-top:10px;margin-left:10px; margin-right:10px">
    @Html.DevExpress().Menu(settings =>
        {
            settings.Name = "ToolBar";
            DevCommonHelper.SetMenuSetting(settings);
            settings.ClientSideEvents.ItemClick = "ToolBarClick";
            settings.Items.Add(i =>
            {
                i.Name = "Save";
                DevCommonHelper.SetMenuButtonSetting(i, BtnType.Save);
            });
            settings.Items.Add(i =>
            {
                i.Name = "Cancel";
                DevCommonHelper.SetMenuButtonSetting(i, BtnType.Cancel);
            });
        }).GetHtml()
</div>

<script>
    var selectFirst = false;
    function BA02ASelectChanged(s, e) {
        BA02B_ID.PerformCallback();
        selectFirst = true;
    }
    function BA02B_IDBegCall(s, e) {
        e.customArgs["key"] = BA02A_ID.GetValue();
    }
    function BA02B_IDEndCall(s, e) {
        if (selectFirst) {
            selectFirst = false;
            s.SetSelectedIndex(0);
        }
    }
</script>
<form id="MasterForm" style="margin-top:20px;margin-left:10px; margin-right:10px">
    <div id="MasterFormDiv">
        @{
            Html.RenderPartial("_MasterForm", ViewData["Master"]);
        }
    </div>
</form>

<script>
    function DetailGridBeginCallback(s, e) {
        DetailGrid.callbackCustomArgs["key"] = "";
    }
    function DetailGridEndCallBack(s, e) {
        $("#MasterFormDiv").html(s.cpMasterForm);
        if (s.cpIsSuccess == "true") {
            ShowSuccess();
        }
        else if (s.cpErrMsg != undefined && s.cpErrMsg.length > 0) {
            ShowError(s.cpErrMsg);
            if (s.cpDeleteIDs != undefined) {
                var key = s.cpDeleteIDs.split(",");//把刪除的row重新標記刪除
                for (var i = 0; i < key.length - 1; i++) {
                    DetailGrid.DeleteRowByKey(key[i].toString());
                }
            }
        }
    }
    function BtnDetailAddNewClick(s, e) {
        DetailGrid.AddNewRow();
    }
</script>
<script>
    //專門處理挑選會計科目
    var index;
    function BA01AEditBtnClick(s, e) {
        index = DetailGrid.batchEditApi.GetEditCellInfo().rowVisibleIndex;
        var BA01A_ID = DetailGrid.batchEditApi.GetCellValue(index, "BA01A_ID", false);
        BA01ALookUpGrid.PerformCallback({ selectedItem: BA01A_ID, FirstPage: true });
        BA01APopup.ShowAtElement(s.GetMainElement());
    }
    function BA01ALookUpGridBegCall(s, e) {
        //e.customArgs["BA01A_ID"] = CbBA01A_ID.GetValue();
    }
    function SetBA01ATextBox(s, e) {
        BA01ALookUpGrid.GetSelectedFieldValues('BA01A_ID;ACC_NO;ACC_NM', OnGetSelectedFieldValues);
    }
    function OnGetSelectedFieldValues(selectedValues) {
        if (selectedValues.length == 0) {
            return;
        } else {
            DetailGrid.batchEditApi.SetCellValue(index, "BA01A_ID", selectedValues[0][0], selectedValues[0][2]);//value,displayText
            DetailGrid.batchEditApi.SetCellValue(index, "ACC_NO", selectedValues[0][1], selectedValues[0][1]);
            DetailGrid.batchEditApi.EndEdit();
        }
    }
</script>
<script>
    function OnBatchEditRowDeleting(s, e) {
        //var RecoverButton = "<a href='#' onclick='RecoverClick(" + e.visibleIndex + ")' id='Recover" + e.visibleIndex + "'>Recover</a>";
        //var id = "#DetailGrid_DXDataRow" + e.visibleIndex + " .dxgvCommandColumn_Metropolis";
        //$(id).append(RecoverButton);
        var CellValueCRE = DetailGrid.batchEditApi.GetCellValue(e.visibleIndex, "CRE_MY", false);
        var CellValueDEB = DetailGrid.batchEditApi.GetCellValue(e.visibleIndex, "DEB_MY", false);
        CaculateSummary("CRE", e.visibleIndex, CellValueCRE, true);
        CaculateSummary("DEB", e.visibleIndex, CellValueDEB, true);//不要計算的row index
    }
    function OnBatchEditEndEditing(s, e) {
        var CellValueCRE = DetailGrid.batchEditApi.GetCellValue(e.visibleIndex, "CRE_MY", false);//上一次修改的值
        var CellValueDEB = DetailGrid.batchEditApi.GetCellValue(e.visibleIndex, "DEB_MY", false);//上一次修改的值
        var newValueCRE = e.rowValues[(s.GetColumnByField("CRE_MY").index)].value;//最新修改的值
        var newValueDEB = e.rowValues[(s.GetColumnByField("DEB_MY").index)].value;//最新修改的值
        var difCRE = newValueCRE - CellValueCRE;
        var difDEB = newValueDEB - CellValueDEB;
        CaculateSummary("CRE", e.visibleIndex, difCRE, false);
        CaculateSummary("DEB", e.visibleIndex, difDEB, false);
    }

    function RecoverClick(visibleIndex) {
        $("#Recover" + visibleIndex).remove();
        DetailGrid.batchEditApi.ResetChanges(visibleIndex);
        var CellValueCRE = DetailGrid.batchEditApi.GetCellValue(visibleIndex, "CRE_MY", false);
        var CellValueDEB = DetailGrid.batchEditApi.GetCellValue(visibleIndex, "DEB_MY", false);
        CaculateSummary("CRE", visibleIndex, CellValueCRE, false);
        CaculateSummary("DEB", visibleIndex, CellValueDEB, false);
    }

    function CaculateSummary(type, visibleIndex, CellValue, isDelete) {
        if (type == 'CRE') {
            var orgValue = parseFloat(labelSumCRE.GetValue());
            if (isDelete) {
                labelSumCRE.SetValue(orgValue - CellValue);//刪除直接扣掉
            } else {
                labelSumCRE.SetValue(orgValue + CellValue);
            }
        } else {
            var orgValue = parseFloat(labelSumDEB.GetValue());
            if (isDelete) {
                labelSumDEB.SetValue(orgValue - CellValue);//刪除直接扣掉
            } else {
                labelSumDEB.SetValue(orgValue + CellValue);
            }
        }
    }
</script>
<div style="margin-top:10px;margin-left:10px; margin-right:10px">
    @{
        Html.RenderPartial("_DetailGrid", ViewData["Detail"]);
    }
</div>

@{
    Html.RenderAction("BA01ASelectPopup", "Utility", new { popupElementID = "BA01AEditBtnClick" });
}